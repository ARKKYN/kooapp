{"ast":null,"code":"import React from 'react';\nexport default function useIntersectionObserver(_ref) {\n  var root = _ref.root,\n      target = _ref.target,\n      onIntersect = _ref.onIntersect,\n      _ref$threshold = _ref.threshold,\n      threshold = _ref$threshold === void 0 ? 1.0 : _ref$threshold,\n      _ref$rootMargin = _ref.rootMargin,\n      rootMargin = _ref$rootMargin === void 0 ? '0px' : _ref$rootMargin,\n      _ref$enabled = _ref.enabled,\n      enabled = _ref$enabled === void 0 ? true : _ref$enabled;\n  React.useEffect(function () {\n    if (!enabled) {\n      return;\n    }\n\n    var observer = new IntersectionObserver(function (entries) {\n      return entries.forEach(function (entry) {\n        return entry.isIntersecting && onIntersect();\n      });\n    }, {\n      root: root && root.current,\n      rootMargin: rootMargin,\n      threshold: threshold\n    });\n    var el = target && target.current;\n\n    if (!el) {\n      return;\n    }\n\n    observer.observe(el);\n    return function () {\n      observer.unobserve(el);\n    };\n  }, [target.current, enabled]);\n}","map":null,"metadata":{},"sourceType":"module"}