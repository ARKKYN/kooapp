{"ast":null,"code":"import React from 'react';\nexport default function useIntersectionObserver(_ref) {\n  var root = _ref.root,\n      target = _ref.target,\n      onIntersect = _ref.onIntersect,\n      _ref$threshold = _ref.threshold,\n      threshold = _ref$threshold === void 0 ? 1.0 : _ref$threshold,\n      _ref$rootMargin = _ref.rootMargin,\n      rootMargin = _ref$rootMargin === void 0 ? '0px' : _ref$rootMargin,\n      _ref$enabled = _ref.enabled,\n      enabled = _ref$enabled === void 0 ? true : _ref$enabled;\n  React.useEffect(function () {\n    if (!enabled) {\n      return;\n    }\n\n    var observer = new IntersectionObserver(function (entries) {\n      return entries.forEach(function (entry) {\n        return entry.isIntersecting && onIntersect();\n      });\n    }, {\n      root: root && root.current,\n      rootMargin: rootMargin,\n      threshold: threshold\n    });\n    var el = target && target.current;\n\n    if (!el) {\n      return;\n    }\n\n    observer.observe(el);\n    return function () {\n      observer.unobserve(el);\n    };\n  }, [target.current, enabled]);\n}","map":{"version":3,"sources":["/Users/arul/Desktop/load-more-infinite-scroll/hooks/useIntersectionObserver.js"],"names":["React","useIntersectionObserver","root","target","onIntersect","threshold","rootMargin","enabled","useEffect","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","current","el","observe","unobserve"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe,SAASC,uBAAT,OAOZ;AAAA,MANDC,IAMC,QANDA,IAMC;AAAA,MALDC,MAKC,QALDA,MAKC;AAAA,MAJDC,WAIC,QAJDA,WAIC;AAAA,4BAHDC,SAGC;AAAA,MAHDA,SAGC,+BAHW,GAGX;AAAA,6BAFDC,UAEC;AAAA,MAFDA,UAEC,gCAFY,KAEZ;AAAA,0BADDC,OACC;AAAA,MADDA,OACC,6BADS,IACT;AACDP,EAAAA,KAAK,CAACQ,SAAN,CAAgB,YAAM;AACpB,QAAI,CAACD,OAAL,EAAc;AACZ;AACD;;AAED,QAAME,QAAQ,GAAG,IAAIC,oBAAJ,CACf,UAAAC,OAAO;AAAA,aACLA,OAAO,CAACC,OAAR,CAAgB,UAAAC,KAAK;AAAA,eAAIA,KAAK,CAACC,cAAN,IAAwBV,WAAW,EAAvC;AAAA,OAArB,CADK;AAAA,KADQ,EAGf;AACEF,MAAAA,IAAI,EAAEA,IAAI,IAAIA,IAAI,CAACa,OADrB;AAEET,MAAAA,UAAU,EAAVA,UAFF;AAGED,MAAAA,SAAS,EAATA;AAHF,KAHe,CAAjB;AAUA,QAAMW,EAAE,GAAGb,MAAM,IAAIA,MAAM,CAACY,OAA5B;;AAEA,QAAI,CAACC,EAAL,EAAS;AACP;AACD;;AAEDP,IAAAA,QAAQ,CAACQ,OAAT,CAAiBD,EAAjB;AAEA,WAAO,YAAM;AACXP,MAAAA,QAAQ,CAACS,SAAT,CAAmBF,EAAnB;AACD,KAFD;AAGD,GA1BD,EA0BG,CAACb,MAAM,CAACY,OAAR,EAAiBR,OAAjB,CA1BH;AA2BD","sourcesContent":["import React from 'react'\n\nexport default function useIntersectionObserver({\n  root,\n  target,\n  onIntersect,\n  threshold = 1.0,\n  rootMargin = '0px',\n  enabled = true,\n}) {\n  React.useEffect(() => {\n    if (!enabled) {\n      return\n    }\n\n    const observer = new IntersectionObserver(\n      entries =>\n        entries.forEach(entry => entry.isIntersecting && onIntersect()),\n      {\n        root: root && root.current,\n        rootMargin,\n        threshold,\n      }\n    )\n\n    const el = target && target.current\n\n    if (!el) {\n      return\n    }\n\n    observer.observe(el)\n\n    return () => {\n      observer.unobserve(el)\n    }\n  }, [target.current, enabled])\n}\n"]},"metadata":{},"sourceType":"module"}