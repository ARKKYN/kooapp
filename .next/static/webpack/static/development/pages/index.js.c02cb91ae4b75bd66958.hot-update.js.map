{"version":3,"file":"static/webpack/static/development/pages/index.js.c02cb91ae4b75bd66958.hot-update.js","sources":["webpack:///./components/Home/Home.jsx"],"sourcesContent":["import Link from 'next/link'\nimport axios from 'axios'\n\nimport { useInfiniteQuery } from 'react-query'\nimport { ReactQueryDevtools } from 'react-query/devtools'\n\nimport useIntersectionObserver from '../../hooks/useIntersectionObserver'\n\nfunction Home() {\n\n  const {\n    status,\n    data,\n    error,\n    isFetching,\n    isFetchingNextPage,\n    isFetchingPreviousPage,\n    fetchNextPage,\n    fetchPreviousPage,\n    hasNextPage,\n    hasPreviousPage,\n  } = useInfiniteQuery(\n    'projects',\n    async ({ pageParam = \"https://gorest.co.in/public/v1/posts\" }) => {\n      const res = await axios.get(pageParam)\n      return res.data\n    },\n    {\n      getPreviousPageParam: firstPage => {\n        return firstPage.meta.pagination.links.previous ?? false;\n      },\n      getNextPageParam: lastPage => {\n        return lastPage.meta.pagination.links.next ?? false;\n      },\n    }\n  )\n\n  const loadMoreButtonRef = React.useRef()\n\n  useIntersectionObserver({\n    target: loadMoreButtonRef,\n    onIntersect: fetchNextPage,\n    enabled: hasNextPage,\n  })\n\n  return (\n    <div>\n      <h1>Infinite Loading</h1>\n      {status === 'loading' ? (\n        <p>Loading...</p>\n      ) : status === 'error' ? (\n        <span>Error: {error.message}</span>\n      ) : (\n        <>\n          <div>\n            <button\n              onClick={() => fetchPreviousPage()}\n              disabled={!hasPreviousPage || isFetchingPreviousPage}\n            >\n              {isFetchingNextPage\n                ? 'Loading more...'\n                : hasNextPage\n                ? 'Load Older'\n                : 'Nothing more to load'}\n            </button>\n          </div>\n          {data.pages.map(page => (\n            <React.Fragment key={page.meta.pagination.page + 1}>\n              {page.data.map(project => {\n                console.log(page);\n                console.log(project);\n                return (\n                <p\n                  style={{\n                   border: \"1px solid black\",\n                   borderRadius: \"4\"\n                  }}\n                  key={project.id}\n                >\n                  {project.title}\n                  {project.body}\n                </p>\n              )})}\n            </React.Fragment>\n          ))}\n          <div>\n            <button\n              ref={loadMoreButtonRef}\n              onClick={() => fetchNextPage()}\n              disabled={!hasNextPage || isFetchingNextPage}\n            >\n              {isFetchingNextPage\n                ? 'Loading more...'\n                : hasNextPage\n                ? 'Load Newer'\n                : 'Nothing more to load'}\n            </button>\n          </div>\n          <div>\n            {isFetching && !isFetchingNextPage\n              ? 'Background Updating...'\n              : null}\n          </div>\n        </>\n      )}\n      <hr />\n      <Link href=\"/about\">\n        <a>Go to another page</a>\n      </Link>\n      <ReactQueryDevtools initialIsOpen />\n    </div>\n  )\n}\n\nexport default Home;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AAaA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AANA;AAjBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AA0BA;AAEA;AACA;AACA;AACA;AAHA;AAMA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAFA;AAIA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAhBA;AAmBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;;;;A","sourceRoot":""}