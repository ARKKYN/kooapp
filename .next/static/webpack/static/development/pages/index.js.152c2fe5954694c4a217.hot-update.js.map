{"version":3,"file":"static/webpack/static/development/pages/index.js.152c2fe5954694c4a217.hot-update.js","sources":["webpack:///./components/Home/Home.jsx"],"sourcesContent":["import axios from 'axios'\n\nimport { useInfiniteQuery } from 'react-query'\n\nimport useIntersectionObserver from '../../hooks/useIntersectionObserver'\n\nfunction Home() {\n\n  const {\n    status,\n    data,\n    error,\n    isFetching,\n    isFetchingNextPage,\n    fetchNextPage,\n    hasNextPage,\n  } = useInfiniteQuery(\n    'projects',\n    async ({ pageParam = \"https://gorest.co.in/public/v1/posts\" }) => {\n      const res = await axios.get(pageParam)\n      return res.data\n    },\n    {\n      getPreviousPageParam: firstPage => {\n        return firstPage.meta.pagination.links.previous ?? false;\n      },\n      getNextPageParam: lastPage => {\n        return lastPage.meta.pagination.links.next ?? false;\n      },\n    }\n  )\n\n  const loadMoreButtonRef = React.useRef()\n\n  useIntersectionObserver({\n    target: loadMoreButtonRef,\n    onIntersect: fetchNextPage,\n    enabled: hasNextPage,\n  })\n\n  return (\n    <div>\n      <h1>Tweets</h1>\n      {status === 'loading' ? (\n        <></>\n      ) : status === 'error' ? (\n        <span>Error: {error.message}</span>\n      ) : (\n        <>\n          {data.pages.map(page => (\n            <React.Fragment key={page.meta.pagination.page + 1}>\n              {page.data.map(project => <Tweet project={project} />)}\n            </React.Fragment>\n          ))}\n          <div>\n              <button style={{display : \"block\", margin: \"0px auto\"}}   ref={loadMoreButtonRef} onClick={fetchNextPage}>\n              {isFetchingNextPage\n                ? 'Loading ...'\n                : hasNextPage\n                ? 'Loading ...'\n                : 'Nothing more to load'}\n            </button>\n          </div>\n          <div>\n            {isFetching && !isFetchingNextPage\n              ? 'Background Updating...'\n              : null}\n          </div>\n        </>\n      )}\n    </div>\n  )\n}\n\nexport default Home;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AAEA;AACA;AACA;AAAA;AACA;AACA;AAUA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AANA;AAdA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAuBA;AAEA;AACA;AACA;AACA;AAHA;AAMA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;;;;A","sourceRoot":""}